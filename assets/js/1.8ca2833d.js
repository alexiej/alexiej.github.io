(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{294:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),a("p",[t._v("List of commands for some popular applications.")]),t._m(1),t._m(2),t._m(3),t._m(4),a("p",[a("a",{attrs:{href:"https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf"),a("OutboundLink")],1)]),t._m(5)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"software-application"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#software-application","aria-hidden":"true"}},[this._v("#")]),this._v(" SOFTWARE APPLICATION")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[this._v("#")]),this._v(" GIT")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"publish"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#publish","aria-hidden":"true"}},[this._v("#")]),this._v(" Publish")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("git add "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("A \t\t"),a("span",{attrs:{class:"token comment"}},[t._v("# add all files")]),t._v("\ngit commit "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("quiet "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),a("span",{attrs:{class:"token string"}},[t._v('"publish"')]),t._v("\t"),a("span",{attrs:{class:"token comment"}},[t._v("#Commit all changes")]),t._v("\ngit push origin master "),a("span",{attrs:{class:"token comment"}},[t._v("#move to branch master")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"pupular-commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pupular-commands","aria-hidden":"true"}},[this._v("#")]),this._v(" Pupular commands")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("table",[a("thead",[a("tr",[a("th",[t._v("Command")]),a("th",[t._v("Description")])])]),a("tbody",{staticStyle:{width:"100%"}},[a("tr",{staticStyle:{background:"#F8F8FF"}},[a("td",{attrs:{colspan:"2"}},[a("strong",[t._v("CONFIGURATION")])])]),a("tr",[a("td",[a("code",[t._v('git config --global user.name "[name]"')])]),a("td",[t._v("Sets the name you want atached to your commit transactions")])]),a("tr",[a("td",[a("code",[t._v('git config --global user.email "[email address]"')])]),a("td",[t._v("Sets the email you want atached to your commit transactions")])]),a("tr",{staticStyle:{background:"#F8F8FF"}},[a("td",{attrs:{colspan:"2"}},[a("strong",[t._v("REPOSITORY")])])]),a("tr",[a("td",[a("code",[t._v("git init [project-name]")])]),a("td",[t._v("Creates a new local repository with the specified name")])]),a("tr",[a("td",[a("code",[t._v("git clone [url]")])]),a("td",[t._v("Downloads a project and its entire version history")])]),a("tr",{staticStyle:{background:"#F8F8FF"}},[a("td",{attrs:{colspan:"2"}},[a("strong",[t._v("MAKE LOCAL CHANGES")])])]),a("tr",[a("td",[a("code",[t._v("git status")])]),a("td",[t._v("Lists all new or modified files to be commited")])]),a("tr",[a("td",[a("code",[t._v("git diff")])]),a("td",[t._v("Shows file differences not yet staged")])]),a("tr",[a("td",[a("code",[t._v("git add [file]")])]),a("td",[t._v("Snapshots the file in preparation for versioning")])]),a("tr",[a("td",[a("code",[t._v("git rm [file]")])]),a("td",[t._v("Deletes the file from the working directory and stages the deletion")])]),a("tr",[a("td",[a("code",[t._v("git add  -A")])]),a("td",[t._v("Snapshots all files in preparation for versioning")])]),a("tr",[a("td",[a("code",[t._v('git commit  -m "message"')])]),a("td",[t._v("Records file snapshots permanently in version history")])]),a("tr",[a("td",{attrs:{width:"60%"}},[a("code",[t._v('git add --all && git commit --quiet -m "message"')])]),a("td",[t._v("One line to add and commit, silent output")])]),a("tr",{staticStyle:{background:"#F8F8FF"}},[a("td",{attrs:{colspan:"2"}},[a("strong",[t._v("MAKE LOCAL GROUP CHANGES")])])]),a("tr",[a("td",[a("code",[t._v("git branch")])]),a("td",[t._v("Lists all local branches in the current repository")])]),a("tr",[a("td",[a("code",[t._v(" git branch [branch-name]")])]),a("td",[t._v("Creates a new branch")])]),a("tr",[a("td",[a("code",[t._v(" git checkout [branch-name]")])]),a("td",[t._v("Switches to the specified branch and updates the working directory")])]),a("tr",[a("td",[a("code",[t._v("git merge [branch-name]")])]),a("td",[t._v("Combines the specified branchâ€™s history into the current branch")])]),a("tr",[a("td",[a("code",[t._v(" git branch -d [branch-name]")])]),a("td",[t._v("Deletes the specified branch")])]),a("tr",{staticStyle:{background:"#F8F8FF"}},[a("td",{attrs:{colspan:"2"}},[a("strong",[t._v("MAKE SERVER CHANGES")])])]),a("tr",[a("td",[a("code",[t._v("git pull")])]),a("td",[t._v("Downloads bookmark history and incorporates changes")])]),a("tr",[a("td",[a("code",[t._v("git reset --hard")])]),a("td",[t._v("Remove local changes")])]),a("tr",[a("td",[a("code",[t._v(" git push [alias] [branch]")])]),a("td",[t._v("Uploads all local branch commits to GitHub or other git server")])]),a("tr",[a("td",[a("code",[t._v(" git push origin master")])]),a("td",[t._v("Upload to branch master")])])])])}],!1,null,null,null);e.default=s.exports}}]);